import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# ðŸ”¹ Load your packet data
df = pd.read_csv("packet_log.csv")

# ðŸ”¹ Features (everything except the label)
X = df.drop("label", axis=1)

# ðŸ”¹ Labels (what weâ€™re predicting: 0 = normal, 1 = suspicious)
y = df["label"]

# ðŸ”¹ Split data: 80% training, 20% testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# ðŸ”¹ Train Random Forest
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# ðŸ”¹ Predict on the test set
y_pred = model.predict(X_test)

# ðŸ”¹ Evaluation
print("ðŸŽ¯ Accuracy:", accuracy_score(y_test, y_pred))
print("\nðŸ“Š Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nðŸ“‹ Classification Report:\n", classification_report(y_test, y_pred))

# ðŸ”¹ Save the model for real-time use (optional)
import joblib
joblib.dump(model, "packet_model.pkl")
print("\nâœ… Model saved as packet_model.pkl")

